@font-face {
    font-family: Minecraft;
    src: url(../fonts/MinecraftTen-VGORe.ttf);
}

:root {
    --primary: rgba(128, 128, 128, 0.815);

    --secondary: rgb(190, 116, 3);
    --dark: black;
    --light: white;
    --neutral: rgba(0, 0, 0, 0.76);
    font-family: Minecraft;
}

* {
    box-sizing: border-box;
    transform-style: preserve-3d;
}

body {
    perspective: 10000px;
    overflow: hidden;
    height: 100vh;
    background: linear-gradient(rgba(116, 169, 185, 0.5), rgba(144, 238, 144, 0.5));
}

h1 {
    font-size: 2.5rem;
    text-align: center;
}

main {
    display: grid;
    place-items: center;
    width: 100%;
    height: 100%;
}

.wrapper {
    display: grid;
    grid-template-columns: 6rem 1fr 6rem;
    grid-template-rows: 1fr;
    place-items: center;

    width: 100%;
    height: 100%;
}

.map {
    display: grid;
    place-items: center;
    --size: calc(10px * var(--zoom));
    --t-correction: calc(var(--size) * var(--max, 1) * cos(60deg));

    grid-auto-columns: var(--size);
    grid-auto-rows: var(--size);
    background-color: var(--secondary);
    translate: 0 0 var(--t-correction);
    transform: rotateX(calc(var(--rX) * 1deg)) rotateZ(calc(var(--rZ) * 1deg));
    height: fit-content;
}


.cube {
    display: grid;
    grid-column: var(--x, 1);
    grid-row: var(--y, 1);
    transform: translateZ(calc((var(--z) - 1) * var(--size)));
}

.cube div {
    grid-column: 1;
    grid-row: 1;
    display: grid;
    width: var(--size);
    aspect-ratio: 1;
    background: var(--texture, none) var(--bg, var(--primary));
    background-size: cover;
    /* border: 1px solid color-mix(in srgb, var(--bg) 80%, var(--dark)); */
    backface-visibility: visible;
    cursor: copy;

    &:hover {
        border-color: red;
        filter: brightness(140%);
    }

    &.disabled {
        filter: brightness(30%);
        cursor: not-allowed;
    }
}

.left {
    filter: brightness(80%);
    rotate: y -90deg;
    transform-origin: left;
}

.right {
    filter: brightness(120%);
    rotate: y 90deg;
    transform-origin: right;
}

.back {
    filter: brightness(90%);
    rotate: x 90deg;
    transform-origin: top;
}

.front {
    filter: brightness(110%);
    rotate: x -90deg;
    transform-origin: bottom;
}

.top {
    transform: translateZ(var(--size));
}

/*** Types ***/
.types {
    contain: paint;
    margin: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    background-color: var(--neutral);
    padding: 0.5rem;
    border-radius: 0.5rem;
    height: fit-content;

    & button {
        background: var(--texture, none) var(--bg, var(--primary));
        background-size: cover;
        border: 3px solid color-mix(in srgb, var(--bg) 50%, var(--light));
        border-radius: 0.25rem;
        aspect-ratio: 1;
        cursor: pointer;

        &.active {
            border-color: red;
        }

        &:hover {
            filter: brightness(110%);
        }
    }
}

.destroy {
    --bg: rgba(0, 0, 0, 0.9);
    color: white;
    border-style: dotted;
    margin-bottom: 2rem;
}

.fire {
    --bg: rgb(255, 145, 0);
    --texture: url('../images/fire.png');
    color: white;
}

.grass {
    --bg: rgb(118, 179, 61);
    --texture: url('../images/grass.png');
}

.stone {
    --bg: rgb(170, 170, 170);
    --texture: url('../images/stone.png');

}

.leaf {
    --bg: transparent;
    --texture: url('../images/leaf.png');
}

.ground {
    --texture: url('../images/ground.png');
}

.bark {
    --bg: rgba(129, 64, 24, 0.76);
    --texture: url('../images/bark.png');
    color: white;
}

.rock {
    --bg: rgba(129, 64, 24, 0.76);
    --texture: url('../images/rock.png');
    color: white;
}

.water {
    --bg: rgba(60, 133, 243, 0.76);
}

.navigation {

    & button {
        width: 3rem;
        background-color: var(--light);

        &:hover {
            filter: none;
            opacity: 0.8;
        }
    }
}